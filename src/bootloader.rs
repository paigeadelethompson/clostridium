use crate::memory::{LOCATIONS_BEGIN, LOCATIONS_END, Memory};

const BOOTLOADER_CODE: [u8; 512] = [
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0xf8, 0xf9, 0x00,
    0x02, 0x38, 0x00, 0x0f, 0xf4, 0x23, 0x02, 0x38, 0x00, 0xfe, 0xfb, 0x0b, 0x33,
    0x7c, 0x00, 0x02, 0x00, 0x02, 0x13, 0x7c, 0x00, 0xe8, 0x00, 0x06, 0x32, 0xbc,
    0xe1, 0x00, 0x3e, 0x29, 0x00, 0x04, 0x33, 0x7c, 0xe1, 0x00, 0x00, 0x10, 0x3a,
    0x29, 0x00, 0x04, 0x08, 0x05, 0x00, 0x0d, 0x66, 0x00, 0x00, 0x14, 0x3a, 0x29,
    0x00, 0x14, 0x08, 0x05, 0x00, 0x0d, 0x66, 0x00, 0x00, 0x04, 0x60, 0xe6, 0x43,
    0xf8, 0xf9, 0x10, 0x08, 0x05, 0x00, 0x07, 0x67, 0x0c, 0x33, 0x7c, 0x01, 0x26,
    0x00, 0x02, 0x13, 0x7c, 0x00, 0x40, 0x00, 0x07, 0x72, 0x03, 0xe1, 0x88, 0x7c,
    0x01, 0x60, 0x1e, 0x10, 0x04, 0x51, 0xc9, 0xff, 0xf6, 0x20, 0x40, 0x7c, 0x02,
    0x60, 0x12, 0x10, 0x04, 0x67, 0x0c, 0x7c, 0x03, 0x60, 0x0a, 0x10, 0xc4, 0x53,
    0x00, 0x66, 0xf6, 0x60, 0xdc, 0x4e, 0xd0, 0x42, 0x84, 0x74, 0x01, 0xe9, 0x4c,
    0x3a, 0x29, 0x00, 0x04, 0x08, 0x05, 0x00, 0x0d, 0x67, 0xf6, 0x13, 0x45, 0x00,
    0x07, 0x0c, 0x05, 0x00, 0x40, 0x6e, 0x08, 0x0c, 0x05, 0x00, 0x2f, 0x6e, 0x08,
    0x60, 0xb8, 0x04, 0x05, 0x00, 0x37, 0x60, 0x04, 0x04, 0x05, 0x00, 0x30, 0x88,
    0x05, 0x51, 0xca, 0xff, 0xd4, 0x0c, 0x06, 0x00, 0x01, 0x67, 0xaa, 0x0c, 0x06,
    0x00, 0x02, 0x67, 0xb0, 0x60, 0xb6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x95, 0x00, 0x00,
    0x8a, 0x96, 0x00, 0x03, 0xf1, 0xbe, 0x00, 0x03, 0xe6, 0x76, 0x00, 0x03, 0x60,
    0x00, 0xff, 0x78, 0x4e, 0x71, 0x4e, 0x71, 0x4e, 0x71, 0x4e, 0x71, 0x4e, 0x71,
    0x4e, 0x71, 0x4e, 0x71, 0x4e, 0x71, 0x4e, 0x71, 0x4e, 0x71, 0x4e, 0x71, 0x4e,
    0x71, 0x4e, 0x71, 0x4e, 0x71
];

pub fn load_boot_loader(mem: &mut Memory) {
    for (index, byte_data) in
    std::iter::zip(LOCATIONS_BEGIN::BOOTLOADER as u32..LOCATIONS_END::BOOTLOADER as u32, BOOTLOADER_CODE) {
        mem.memory.insert(index as usize, byte_data);
    }
}